################################################################################
# Substitution Variables
################################################################################
substitutions:
  device_name: "esphome-weather-station"
  device_internal_name: "esphome_weather_station"
  device_friendly_name: ESPHome Weather Station
  device_ip_address: xxx.xxx.xxx.xxx
  device_sampling_time: 25s
  battery_full: "3.11"
  battery_empty: "2.492"
  battery_diff: "0.618"

################################################################################
# Globals
################################################################################
globals: ##to set default reboot behavior
  - id: wifi_connection
    type: bool
    restore_value: no
    initial_value: "false"

################################################################################
# Board Configuration
################################################################################
esphome:
  name: ${device_name}
  friendly_name: ${device_friendly_name}

esp32:
  board: esp32dev
  framework:
    type: arduino

################################################################################
# Enable logging
################################################################################
logger:
  baud_rate: 0
  logs:
    sensor: INFO
    binary_sensor: INFO
    text_sensor: INFO

################################################################################
# Enable Home Assistant API
################################################################################
api:
  reboot_timeout: 0s
  encryption:
    key: !secret api_encryption_key

ota:
  safe_mode: true
  reboot_timeout: 10min
  num_attempts: 5
  password: !secret web_server_password

################################################################################
# WiFi
################################################################################
wifi:
  networks:
    - ssid: !secret wifi_ssid
      password: !secret wifi_password

  power_save_mode: NONE

  manual_ip:
    static_ip: ${device_ip_address}
    gateway: !secret gateway_address
    subnet: !secret subnet_address
    dns1: !secret dns_address

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: ${device_friendly_name}
    password: !secret web_server_password

################################################################################
# Web Server
################################################################################
web_server:
  port: 80
  version: 2
  include_internal: true
  auth:
    username: !secret web_server_user
    password: !secret web_server_password
  local: true

captive_portal:

################################################################################
# Status led
################################################################################
status_led:
  pin:
    number: GPIO2
    inverted: false

################################################################################
# I2C
################################################################################
i2c:
  sda: GPIO21
  scl: GPIO22
  scan: True

################################################################################
# Home Assistant Sensors
################################################################################
time:
  - platform: homeassistant
    id: internal_time

################################################################################
# Sun Sensors
################################################################################
sun:
  latitude: -26.268453°
  longitude: 28.011981°

################################################################################
# Text Sensors
################################################################################
text_sensor:
  #-------------------------------------------------------------------------------
  # ESP32 internal sensors
  #-------------------------------------------------------------------------------
  - platform: wifi_info
    ip_address:
      name: IP Address
      id: ${device_internal_name}_ip_address
    ssid:
      name: Connected SSID
      id: ${device_internal_name}_connected_ssid
    mac_address:
      name: Mac Wifi Address
      id: ${device_internal_name}_mac_address

  - platform: version
    name: "ESPHome Version"
    hide_timestamp: true

  #-------------------------------------------------------------------------------
  # Custom Text sensors
  #-------------------------------------------------------------------------------
  - platform: template
    name: Uptime Human Readable
    id: ${device_internal_name}_uptime_human
    icon: mdi:clock-start

  #-------------------------------------------------------------------------------
  # Sun sensors
  #-------------------------------------------------------------------------------

  - platform: sun
    name: Sun Next Sunrise
    type: sunrise
    internal: True

  - platform: sun
    name: Sun Next Sunset
    type: sunset
    internal: True

  #-------------------------------------------------------------------------------
  # Weather sensors
  #-------------------------------------------------------------------------------
  - platform: template
    name: "Beaufort Wind Scale"
    icon: "mdi:tailwind"
    id: ${device_internal_name}_wind_scale
    update_interval: never

  - platform: template
    name: "Wind Cardinal Direction"
    icon: mdi:compass-rose
    id: ${device_internal_name}_wind_dir_card

################################################################################
# Binary Sensors
################################################################################
binary_sensor:
  # ESP Status
  - platform: status
    name: "Status"
    id: ${device_internal_name}_device_status

################################################################################
# Dallas Sensor
################################################################################
dallas:
  - pin: GPIO4
    id: dallas_hub

################################################################################
# Lightning Sensor
################################################################################
as3935_i2c:
  address: 0x03
  irq_pin: GPIO12

################################################################################
# Sensors
################################################################################
sensor:
  #-------------------------------------------------------------------------------
  # ESP Generic Sensors
  #-------------------------------------------------------------------------------

  # Internal Temperature
  - platform: internal_temperature
    name: Internal Temperature
    id: device_temperature
    update_interval: ${device_sampling_time}

  # WiFi
  - platform: wifi_signal
    name: "WiFi Signal Sensor"
    id: ${device_internal_name}_wifi_signal_sensor
    update_interval: ${device_sampling_time}

  # Uptime
  - platform: uptime
    name: "Uptime Sensor"
    id: ${device_internal_name}_uptime_sensor
    update_interval: ${device_sampling_time}
    on_raw_value:
      then:
        - text_sensor.template.publish:
            id: ${device_internal_name}_uptime_human
            state: !lambda |-
              int seconds = round(id(${device_internal_name}_uptime_sensor).raw_state);
              int days = seconds / (24 * 3600);
              seconds = seconds % (24 * 3600);
              int hours = seconds / 3600;
              seconds = seconds % 3600;
              int minutes = seconds /  60;
              seconds = seconds % 60;
              return (
                (days ? to_string(days) + "d " : "") +
                (hours ? to_string(hours) + "h " : "") +
                (minutes ? to_string(minutes) + "m " : "") +
                (to_string(seconds) + "s")
              ).c_str();

  #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  # Sun sensors
  #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  - platform: sun
    name: Sun Elevation
    type: elevation
    internal: True

  - platform: sun
    name: Sun Azimuth
    type: azimuth
    internal: True

  #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  # Internal sensors
  #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

  #-------------------------------------------------------------------------------
  # BME280 and related Sensors (0x76)
  #-------------------------------------------------------------------------------
  - platform: bme280
    temperature:
      name: "BME280 Temperature"
      id: ${device_internal_name}_bme280_temperature
      oversampling: 16x
    pressure:
      name: "Pressure"
      id: ${device_internal_name}_pressure
    humidity:
      name: "Humidity"
      id: ${device_internal_name}_relative_humidity
    address: 0x76
    update_interval: ${device_sampling_time}

  - platform: absolute_humidity
    name: Absolute Humidity
    id: ${device_internal_name}_absolute_humidity
    temperature: ${device_internal_name}_bme280_temperature
    humidity: ${device_internal_name}_relative_humidity

  - platform: template
    name: "Dew Point"
    lambda: |-
      return (243.5*(log(id(${device_internal_name}_relative_humidity).state/100)+((17.67*id(${device_internal_name}_bme280_temperature).state)/
      (243.5+id(${device_internal_name}_bme280_temperature).state)))/(17.67-log(id(${device_internal_name}_relative_humidity).state/100)-
      ((17.67*id(${device_internal_name}_bme280_temperature).state)/(243.5+id(${device_internal_name}_bme280_temperature).state))));
    unit_of_measurement: °C
    icon: "mdi:thermometer-alert"

  #-------------------------------------------------------------------------------
  # Dallas Sensor
  #-------------------------------------------------------------------------------
  - platform: dallas
    index: 0
    name: "Dallas Temperature"
    id: ${device_internal_name}_dallas_temperature
    resolution: 10

  #-------------------------------------------------------------------------------
  # CCS811 Air Quality Control Sensor (0x5A)
  #-------------------------------------------------------------------------------
  - platform: ccs811
    eco2:
      name: "eCO2 Value"
      id: ${device_internal_name}_eco2
    tvoc:
      name: "Total Volatile Organic Compound"
      id: ${device_internal_name}_tvoc
      icon: mdi:heat-wave
    version:
      name: CCS811 Version
      id: ${device_internal_name}_ccs811_version
    address: 0x5A
    temperature: ${device_internal_name}_dallas_temperature
    humidity: ${device_internal_name}_relative_humidity
    update_interval: ${device_sampling_time}

  #-------------------------------------------------------------------------------
  # LTR390 UV and Ambient Light Sensor (0x53)
  #-------------------------------------------------------------------------------
  - platform: ltr390
    uv_index:
      name: "UV"
      id: ${device_internal_name}_uv_index
      accuracy_decimals: 1
    uv:
      name: "UV Index"
      id: ${device_internal_name}_uv
      accuracy_decimals: 0
      unit_of_measurement: " "
    light:
      name: "LTR390 Illiminance"
      id: ${device_internal_name}_LTR390_illuminance
      accuracy_decimals: 1
    ambient_light:
      name: "LTR390 Ambient Light"
      id: ${device_internal_name}_ambient_light
      accuracy_decimals: 0
      unit_of_measurement: " "
    address: 0x53
    update_interval: ${device_sampling_time}

  #-------------------------------------------------------------------------------
  # Wind speed and related sensors
  #-------------------------------------------------------------------------------
  - platform: as3935
    lightning_energy:
      name: "Lightning Energy"
    distance:
      name: "Distance Storm"

  #-------------------------------------------------------------------------------
  # Wind speed and related sensors
  #-------------------------------------------------------------------------------

  - platform: pulse_meter
    pin:
      number: GPIO14
      mode: INPUT
    id: ${device_internal_name}_wind_speed
    unit_of_measurement: "km/h"
    name: "Wind Speed"
    icon: "mdi:weather-windy"
    accuracy_decimals: 1
    timeout: 5s
    filters:
      - multiply: 0.048
  #      - sliding_window_moving_average:
  #          window_size: 20
  #          send_every: 20

  - platform: copy
    name: "Wind Speed Average"
    icon: "mdi:weather-windy"
    id: ${device_internal_name}_wind_speed_avg
    source_id: ${device_internal_name}_wind_speed
    unit_of_measurement: "km/h"
    filters:
      - throttle_average: 50s

  - platform: template
    name: "Wind Speed"
    icon: "mdi:weather-windy"
    id: ${device_internal_name}_wind_meter_avg
    lambda: return id(${device_internal_name}_wind_speed).state;
    unit_of_measurement: "km/h"
    update_interval: ${device_sampling_time}
    filters:
      - throttle_average: 50s
    on_value:
      lambda: |-
        if (id(${device_internal_name}_wind_speed_avg).state < 1) {
          id(${device_internal_name}_wind_scale).publish_state("Calm");
        } else if (id(${device_internal_name}_wind_speed_avg).state > 0 && id(${device_internal_name}_wind_speed_avg).state < 4) {
          id(${device_internal_name}_wind_scale).publish_state("Light Air");
        } else if (id(${device_internal_name}_wind_meter_avg).state > 3 && id(${device_internal_name}_wind_meter_avg).state < 8) {
          id(${device_internal_name}_wind_scale).publish_state("Light Breeze");
        } else if (id(${device_internal_name}_wind_meter_avg).state > 7 && id(${device_internal_name}_wind_meter_avg).state < 13) {
          id(${device_internal_name}_wind_scale).publish_state("Gentle Breeze");
        } else if (id(${device_internal_name}_wind_meter_avg).state > 12 && id(${device_internal_name}_wind_meter_avg).state < 19) {
          id(${device_internal_name}_wind_scale).publish_state("Moderate Breeze");
        } else if (id(${device_internal_name}_wind_meter_avg).state > 18 && id(${device_internal_name}_wind_meter_avg).state < 25) {
          id(${device_internal_name}_wind_scale).publish_state("Fresh Breeze");
        } else if (id(${device_internal_name}_wind_meter_avg).state > 24 && id(${device_internal_name}_wind_meter_avg).state < 32) {
          id(${device_internal_name}_wind_scale).publish_state("Strong Breeze");
        } else if (id(${device_internal_name}_wind_meter_avg).state > 31 && id(${device_internal_name}_wind_meter_avg).state < 39) {
          id(${device_internal_name}_wind_scale).publish_state("Near Gale");
        } else if (id(${device_internal_name}_wind_meter_avg).state > 38 && id(${device_internal_name}_wind_meter_avg).state < 47) {
          id(${device_internal_name}_wind_scale).publish_state("Gale");
        } else if (id(${device_internal_name}_wind_meter_avg).state > 46 && id(${device_internal_name}_wind_meter_avg).state < 55) {
          id(${device_internal_name}_wind_scale).publish_state("Severe Gale");
        } else if (id(${device_internal_name}_wind_meter_avg).state > 54 && id(${device_internal_name}_wind_meter_avg).state < 64) {
          id(${device_internal_name}_wind_scale).publish_state("Storm");
        } else if (id(${device_internal_name}_wind_meter_avg).state > 63 && id(${device_internal_name}_wind_meter_avg).state < 73) {
          id(${device_internal_name}_wind_scale).publish_state("Violent Storm");
        } else if (id(${device_internal_name}_wind_meter_avg).state > 72) {
          id(${device_internal_name}_wind_scale).publish_state("Hurricane Force");
        } else {
          id(${device_internal_name}_wind_scale).publish_state("Calculating");
        }

  #-------------------------------------------------------------------------------
  # Wind direction and related sensors
  #-------------------------------------------------------------------------------

  - platform: adc
    id: ${device_internal_name}_wind_direction
    pin: GPIO35
    name: ADC wind
    attenuation: 11db
    internal: true
    update_interval: ${device_sampling_time}

  - platform: resistance
    sensor: ${device_internal_name}_wind_direction
    id: ${device_internal_name}_resistance_sensor
    configuration: DOWNSTREAM
    resistor: 10kOhm
    internal: true
    name: Resistance Sensor
    reference_voltage: 3.3V
    accuracy_decimals: 1

    on_value:
      - if:
          condition:
            sensor.in_range:
              id: ${device_internal_name}_resistance_sensor
              above: 30500
              below: 33900
          then:
            - text_sensor.template.publish:
                id: ${device_internal_name}_wind_dir_card
                state: "N"
            - sensor.template.publish:
                id: ${device_internal_name}_wind_heading
                state: 0.0
      - if:
          condition:
            sensor.in_range:
              id: ${device_internal_name}_resistance_sensor
              above: 7500
              below: 8400
          then:
            - text_sensor.template.publish:
                id: ${device_internal_name}_wind_dir_card
                state: "NE"
            - sensor.template.publish:
                id: ${device_internal_name}_wind_heading
                state: 45.0
      - if:
          condition:
            sensor.in_range:
              id: ${device_internal_name}_resistance_sensor
              above: 88000
              below: 115000
          then:
            - text_sensor.template.publish:
                id: ${device_internal_name}_wind_dir_card
                state: "E"
            - sensor.template.publish:
                id: ${device_internal_name}_wind_heading
                state: 90.0
      - if:
          condition:
            sensor.in_range:
              id: ${device_internal_name}_resistance_sensor
              above: 1800
              below: 2500
          then:
            - text_sensor.template.publish:
                id: ${device_internal_name}_wind_dir_card
                state: "SE"
            - sensor.template.publish:
                id: ${device_internal_name}_wind_heading
                state: 135.0
      - if:
          condition:
            sensor.in_range:
              id: ${device_internal_name}_resistance_sensor
              above: 3500
              below: 4000
          then:
            - text_sensor.template.publish:
                id: ${device_internal_name}_wind_dir_card
                state: "S"
            - sensor.template.publish:
                id: ${device_internal_name}_wind_heading
                state: 180.0
      - if:
          condition:
            sensor.in_range:
              id: ${device_internal_name}_resistance_sensor
              above: 14500
              below: 16600
          then:
            - text_sensor.template.publish:
                id: ${device_internal_name}_wind_dir_card
                state: "SW"
            - sensor.template.publish:
                id: ${device_internal_name}_wind_heading
                state: 225.0
      - if:
          condition:
            sensor.in_range:
              id: ${device_internal_name}_resistance_sensor
              above: 850
              below: 1200
          then:
            - text_sensor.template.publish:
                id: ${device_internal_name}_wind_dir_card
                state: "W"
            - sensor.template.publish:
                id: ${device_internal_name}_wind_heading
                state: 270.0
      - if:
          condition:
            sensor.in_range:
              id: ${device_internal_name}_resistance_sensor
              above: 55000
              below: 63000
          then:
            - text_sensor.template.publish:
                id: ${device_internal_name}_wind_dir_card
                state: "NW"
            - sensor.template.publish:
                id: ${device_internal_name}_wind_heading
                state: 315.0

  - platform: template
    name: "Wind heading"
    icon: mdi:compass-outline
    id: ${device_internal_name}_wind_heading
    unit_of_measurement: "°"

  #-------------------------------------------------------------------------------
  # Rain and related sensors
  #-------------------------------------------------------------------------------

  # Rain detection FY-37
  # Soon, because sometime it does not rain enough to fill the gauge

  # Rain Gauge
  - platform: pulse_counter
    pin:
      number: GPIO25
      mode: INPUT
    unit_of_measurement: "mm"
    name: "Rain gauge"
    icon: "mdi:weather-rainy"
    id: ${device_internal_name}_rain_gauge
    count_mode:
      rising_edge: DISABLE
      falling_edge: INCREMENT
    filters:
      - multiply: 0.2794
    accuracy_decimals: 1

  # Rainfall per Minute
  - platform: integration
    name: "Rainfall per min"
    id: rain_per_min
    time_unit: min
    unit_of_measurement: "mm"
    icon: "mdi:weather-rainy"
    sensor: ${device_internal_name}_rain_gauge
    accuracy_decimals: 1

  # Total Daily Rain
  - platform: total_daily_energy
    name: "Total daily rain"
    power_id: ${device_internal_name}_rain_gauge
    unit_of_measurement: "mm"
    icon: "mdi:weather-rainy"
    accuracy_decimals: 1
    filters:
      - multiply: 60

  #-------------------------------------------------------------------------------
  # Battery and related sensors
  #-------------------------------------------------------------------------------

  # Battery Voltage
  - platform: adc
    pin: GPIO33
    name: "Battery"
    unit_of_measurement: "V"
    icon: "mdi:battery-high"
    device_class: "voltage"
    state_class: "measurement"
    accuracy_decimals: 2
    attenuation: 11db
    id: ${device_internal_name}_voltage
    update_interval: ${device_sampling_time}

  # Battery percentage
  - platform: adc
    pin: GPIO33
    name: "Battery %"
    id: ${device_internal_name}_battery_percentage
    attenuation: 11db
    unit_of_measurement: "%"
    filters:
      - lambda: |-
          return ((id(${device_internal_name}_voltage).state - 2.492) / 0.668 * 100.00);
    update_interval: ${device_sampling_time}

################################################################################
# Switch
################################################################################
switch:
  # Internal Switches
  - platform: restart
    name: "Restart"
    id: device_restart

  - platform: safe_mode
    name: Use Safe Mode
    id: device_safe_mode

################################################################################
# Interval
################################################################################
interval:
  - interval: 10s
    then:
      - if:
          condition:
            wifi.connected:
          then:
            - lambda: |-
                id(wifi_connection) = true;
          else:
            - lambda: |-
                id(wifi_connection) = false;
